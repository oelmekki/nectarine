{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap a26e711c5bb8e4cae26b","webpack:///./src/index.js","webpack:///../src/preact.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_preact","render","h","App","document","body","global","factory","this","vnode","parent","merge","arguments","length","undefined","existing","_component","_componentConstructor","nodeName","built","build","deepHook","parentNode","appendChild","attributes","_len","args","Array","_key","children","sharedArr","len","arr","lastSimple","i","_p","empty","join","j","child","simple","isVNode","String","push","VNode","hook","hooks","obj","name","fn","_len2","_key2","apply","_len3","_key3","concat","__isVNode","x","isSameNodeType","node","nodeType","isFunctionalComponent","toLowerCase","_ref2","prototype","buildFunctionalComponent","getNodeProps","EMPTY_BASE","triggerComponentRender","component","_dirty","renderQueue","add","setComponentProps","props","opts","EMPTY","d","_disableRendering","nextProps","renderSync","options","syncComponentUpdates","renderComponent","s","state","base","rendered","childComponent","inst","constructor","unmountComponent","childProps","SYNC_RENDER","componentRecycler","create","_parentComponent","NO_RENDER","DOM_RENDER","_p2","replaceChild","buildComponentFromVNode","dom","isOwner","createComponentFromVNode","remove","removeChild","collect","out","TEXT_CONTENT","recycler","createTextNode","appendChildren","toArray","childNodes","old","getNodeAttributes","attrs","_name","hop","o","setAccessor","_name2","value","prev","getAccessor","keyed","t","key","getAttribute","splice","newChildren","vlen","vchild","_attrs","next","insertBefore","createLinkedState","eventPath","path","split","p0","e","_component$setState","v","delve","type","match","checked","setState","frag","createDocumentFragment","className","style","cssText","setComplexAccessor","substring","_type","normalizeEventName","l","_listeners","addEventListener","eventProxy","removeAttribute","setAttribute","list","getNamedItem","getAttributesAsObject","item","extend","styleObjToCss","str","sep","term","prop","val","jsToCss","NON_DIMENSION_PROPS","hashToClassName","babelHelpers","classCallCheck","instance","Constructor","TypeError","HAS_DOM","boxFlex","boxFlexGroup","columnCount","fillOpacity","flex","flexGrow","flexPositive","flexShrink","flexNegative","fontWeight","lineClamp","lineHeight","opacity","order","orphans","strokeOpacity","widows","zIndex","zoom","Object","hasOwnProperty","memoize","mem","k","map","_ref","Component","_linkedStates","shouldComponentUpdate","linkState","cacheKey","setProps","items","itemsOffline","debounceRendering","process","setTimeout","rerender","nodes","normalizeName","toUpperCase","clean","pop","createElement","removeEventListener","components","ctor","replace","preact"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _preact = __webpack_require__(2);\n\t\n\t__webpack_require__(1);\n\t\n\t_preact.render(_preact.h(App, null), document.body);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t\t true ? factory(exports) :\n\t\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t\tfactory((global.preact = {}));\n\t}(this, function (exports) { 'use strict';\n\t\n\t\tvar babelHelpers = {};\n\t\n\t\tbabelHelpers.classCallCheck = function (instance, Constructor) {\n\t\t  if (!(instance instanceof Constructor)) {\n\t\t    throw new TypeError(\"Cannot call a class as a function\");\n\t\t  }\n\t\t};\n\t\tvar HAS_DOM = typeof document !== 'undefined';\n\t\tvar EMPTY = {};\n\t\tvar NO_RENDER = { render: false };\n\t\tvar SYNC_RENDER = { renderSync: true };\n\t\tvar DOM_RENDER = { build: true };\n\t\tvar EMPTY_BASE = '';\n\t\tvar TEXT_CONTENT = !HAS_DOM || 'textContent' in document ? 'textContent' : 'nodeValue';\n\t\tvar NON_DIMENSION_PROPS = {\n\t\t\tboxFlex: 1, boxFlexGroup: 1, columnCount: 1, fillOpacity: 1, flex: 1, flexGrow: 1,\n\t\t\tflexPositive: 1, flexShrink: 1, flexNegative: 1, fontWeight: 1, lineClamp: 1, lineHeight: 1,\n\t\t\topacity: 1, order: 1, orphans: 1, strokeOpacity: 1, widows: 1, zIndex: 1, zoom: 1\n\t\t};\n\t\n\t\tvar toArray = function toArray(obj) {\n\t\t\tvar arr = [];\n\t\t\tfor (var i = obj.length; i--;) {\n\t\t\t\tarr[i] = obj[i];\n\t\t\t}return arr;\n\t\t};\n\t\n\t\tvar hop = Object.prototype.hasOwnProperty;\n\t\n\t\t/** Create a caching wrapper for the given function.\n\t\t *\t@private\n\t\t */\n\t\tvar memoize = function memoize(fn) {\n\t\t\tvar mem = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\t\treturn function (k) {\n\t\t\t\treturn hop.call(mem, k) ? mem[k] : mem[k] = fn(k);\n\t\t\t};\n\t\t};\n\t\n\t\t/** Get a deep property value from the given object, expressed in dot-notation.\n\t\t *\t@private\n\t\t */\n\t\tvar delve = function delve(obj, key) {\n\t\t\treturn key.split('.').map(function (p) {\n\t\t\t\treturn obj = obj && obj[p];\n\t\t\t}), obj;\n\t\t};\n\t\n\t\t/** Global options\n\t\t *\t@public\n\t\t *\t@namespace {Object}\n\t\t */\n\t\tvar options = {\n\t\t\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t\t  *\t@boolean\n\t\t  */\n\t\t\tsyncComponentUpdates: true\n\t\t};\n\t\n\t\t/** Global hook methods\n\t\t *\t@public\n\t\t *\t@namespace {Object}\n\t\t */\n\t\tvar hooks = {\n\t\n\t\t\t/** Processes all created VNodes.\n\t\t  *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t\t  *\t@protected\n\t\t  */\n\t\t\tvnode: function vnode(_ref) {\n\t\t\t\tvar attributes = _ref.attributes;\n\t\n\t\t\t\tif (!attributes) return;\n\t\n\t\t\t\tvar s = attributes.style;\n\t\t\t\tif (s && !s.substring) {\n\t\t\t\t\tattributes.style = styleObjToCss(s);\n\t\t\t\t}\n\t\n\t\t\t\tvar c = attributes['class'];\n\t\t\t\tif (hop.call(attributes, 'className')) {\n\t\t\t\t\tc = attributes['class'] = attributes.className;\n\t\t\t\t\tdelete attributes.className;\n\t\t\t\t}\n\t\t\t\tif (c && !c.substring) {\n\t\t\t\t\tattributes['class'] = hashToClassName(c);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t};\n\t\n\t\t/** Base Component class, for he ES6 Class method of creating Components\n\t\t *\t@public\n\t\t *\n\t\t *\t@example\n\t\t *\tclass MyFoo extends Component {\n\t\t *\t\trender(props, state) {\n\t\t *\t\t\treturn <div />;\n\t\t *\t\t}\n\t\t *\t}\n\t\t */\n\t\n\t\tvar Component = (function () {\n\t\t\tfunction Component() {\n\t\t\t\tbabelHelpers.classCallCheck(this, Component);\n\t\n\t\t\t\t/** @private */\n\t\t\t\tthis._dirty = this._disableRendering = false;\n\t\t\t\t/** @private */\n\t\t\t\tthis._linkedStates = {};\n\t\t\t\t/** @public */\n\t\t\t\tthis.nextProps = this.base = null;\n\t\t\t\t/** @type {object} */\n\t\t\t\tthis.props = hook(this, 'getDefaultProps') || {};\n\t\t\t\t/** @type {object} */\n\t\t\t\tthis.state = hook(this, 'getInitialState') || {};\n\t\t\t\t// @TODO remove me?\n\t\t\t\thook(this, 'initialize');\n\t\t\t}\n\t\n\t\t\t/** Virtual DOM Node */\n\t\n\t\t\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\n\t\t  *\t@param {object} props\n\t\t  *\t@param {object} state\n\t\t  */\n\t\n\t\t\tComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(props, state) {\n\t\t\t\treturn true;\n\t\t\t};\n\t\n\t\t\t/** Returns a function that sets a state property when called.\n\t\t  *\tCalling linkState() repeatedly with the same arguments returns a cached link function.\n\t\t  *\n\t\t  *\tProvides some built-in special cases:\n\t\t  *\t\t- Checkboxes and radio buttons link their boolean `checked` value\n\t\t  *\t\t- Inputs automatically link their `value` property\n\t\t  *\t\t- Event paths fall back to any associated Component if not found on an element\n\t\t  *\t\t- If linked value is a function, will invoke it and use the result\n\t\t  *\n\t\t  *\t@param {string} key\t\t\t\tThe path to set - can be a dot-notated deep key\n\t\t  *\t@param {string} [eventPath]\t\tIf set, attempts to find the new state value at a given dot-notated path within the object passed to the linkedState setter.\n\t\t  *\t@returns {function} linkStateSetter(e)\n\t\t  *\n\t\t  *\t@example Update a \"text\" state value when an input changes:\n\t\t  *\t\t<input onChange={ this.linkState('text') } />\n\t\t  *\n\t\t  *\t@example Set a deep state value on click\n\t\t  *\t\t<button onClick={ this.linkState('touch.coords', 'touches.0') }>Tap</button\n\t\t  */\n\t\n\t\t\tComponent.prototype.linkState = function linkState(key, eventPath) {\n\t\t\t\tvar c = this._linkedStates,\n\t\t\t\t    cacheKey = key + '|' + (eventPath || '');\n\t\t\t\treturn c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));\n\t\t\t};\n\t\n\t\t\t/** Update component state by copying properties from `state` to `this.state`.\n\t\t  *\t@param {object} state\t\tA hash of state properties to update with new values\n\t\t  */\n\t\n\t\t\tComponent.prototype.setState = function setState(state) {\n\t\t\t\textend(this.state, state);\n\t\t\t\ttriggerComponentRender(this);\n\t\t\t};\n\t\n\t\t\t/** @private */\n\t\n\t\t\tComponent.prototype.setProps = function setProps(props, opts) {\n\t\t\t\treturn setComponentProps(this, props, opts);\n\t\t\t};\n\t\n\t\t\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t\t  *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t\t  *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t\t  *\t@param {object} state\t\tThe component's current state\n\t\t  *\t@returns VNode\n\t\t  */\n\t\n\t\t\tComponent.prototype.render = function render(props) {\n\t\t\t\treturn h('div', null, props.children);\n\t\t\t};\n\t\n\t\t\treturn Component;\n\t\t})();\n\t\n\t\tvar VNode = function VNode(nodeName, attributes, children) {\n\t\t\tbabelHelpers.classCallCheck(this, VNode);\n\t\n\t\t\t/** @type {string|function} */\n\t\t\tthis.nodeName = nodeName;\n\t\n\t\t\t/** @type {object<string>|undefined} */\n\t\t\tthis.attributes = attributes;\n\t\n\t\t\t/** @type {array<VNode>|undefined} */\n\t\t\tthis.children = children;\n\t\t};\n\t\n\t\tVNode.prototype.__isVNode = true;\n\t\n\t\t/** Render JSX into a `parent` Element.\n\t\t *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n\t\t *\t@param {Element} parent\t\tDOM element to render into\n\t\t *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n\t\t *\t@public\n\t\t *\n\t\t *\t@example\n\t\t *\t// render a div into <body>:\n\t\t *\trender(<div id=\"hello\">hello!</div>, document.body);\n\t\t *\n\t\t *\t@example\n\t\t *\t// render a \"Thing\" component into #foo:\n\t\t *\tconst Thing = ({ name }) => <span>{ name }</span>;\n\t\t *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n\t\t */\n\t\n\t\tfunction render(vnode, parent) {\n\t\t\tvar merge = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t\t\tvar existing = merge && merge._component && merge._componentConstructor === vnode.nodeName,\n\t\t\t    built = build(merge, vnode),\n\t\t\t    c = !existing && built._component;\n\t\t\tif (c) deepHook(c, 'componentWillMount');\n\t\t\tif (build.parentNode !== parent) {\n\t\t\t\tparent.appendChild(built);\n\t\t\t}\n\t\t\tif (c) deepHook(c, 'componentDidMount');\n\t\t\treturn built;\n\t\t}\n\t\n\t\t/** @public JSX/hyperscript reviver\n\t\t *\t@see http://jasonformat.com/wtf-is-jsx\n\t\t *  @example\n\t\t *  /** @jsx h *\\/\n\t\t *  import { render, h } from 'preact';\n\t\t *  render(<span>foo</span>, document.body);\n\t\t */\n\t\n\t\tfunction h(nodeName, attributes) {\n\t\t\tfor (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t\t\t\targs[_key - 2] = arguments[_key];\n\t\t\t}\n\t\n\t\t\tvar children = undefined,\n\t\t\t    sharedArr = [],\n\t\t\t    len = args.length,\n\t\t\t    arr = undefined,\n\t\t\t    lastSimple = undefined;\n\t\t\tif (len) {\n\t\t\t\tchildren = [];\n\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\tvar _p = args[i];\n\t\t\t\t\tif (empty(_p)) continue;\n\t\t\t\t\tif (_p.join) {\n\t\t\t\t\t\tarr = _p;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr = sharedArr;\n\t\t\t\t\t\tarr[0] = _p;\n\t\t\t\t\t}\n\t\t\t\t\tfor (var j = 0; j < arr.length; j++) {\n\t\t\t\t\t\tvar child = arr[j],\n\t\t\t\t\t\t    simple = !empty(child) && !isVNode(child);\n\t\t\t\t\t\tif (simple) child = String(child);\n\t\t\t\t\t\tif (simple && lastSimple) {\n\t\t\t\t\t\t\tchildren[children.length - 1] += child;\n\t\t\t\t\t\t} else if (!empty(child)) {\n\t\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSimple = simple;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (attributes && attributes.children) {\n\t\t\t\tdelete attributes.children;\n\t\t\t}\n\t\n\t\t\tvar p = new VNode(nodeName, attributes || undefined, children || undefined);\n\t\t\thook(hooks, 'vnode', p);\n\t\t\treturn p;\n\t\t}\n\t\n\t\t/** Invoke a \"hook\" method with arguments if it exists.\n\t\t *\t@private\n\t\t */\n\t\tfunction hook(obj, name) {\n\t\t\tvar fn = obj[name];\n\t\n\t\t\tfor (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n\t\t\t\targs[_key2 - 2] = arguments[_key2];\n\t\t\t}\n\t\n\t\t\tif (fn && typeof fn === 'function') return fn.apply(obj, args);\n\t\t}\n\t\n\t\t/** Invoke hook() on a component and child components (recursively)\n\t\t *\t@private\n\t\t */\n\t\tfunction deepHook(obj) {\n\t\t\tfor (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t\t\t\targs[_key3 - 1] = arguments[_key3];\n\t\t\t}\n\t\n\t\t\tdo {\n\t\t\t\thook.apply(undefined, [obj].concat(args));\n\t\t\t} while (obj = obj._component);\n\t\t}\n\t\n\t\t/** Fast check if an object is a VNode.\n\t\t *\t@private\n\t\t */\n\t\tfunction isVNode(obj) {\n\t\t\treturn obj && obj.__isVNode === true;\n\t\t}\n\t\n\t\t/** Check if a value is `null` or `undefined`.\n\t\t *\t@private\n\t\t */\n\t\tfunction empty(x) {\n\t\t\treturn x === null || x === undefined;\n\t\t}\n\t\n\t\t/** Check if two nodes are equivalent.\n\t\t *\t@param {Element} node\n\t\t *\t@param {VNode} vnode\n\t\t *\t@private\n\t\t */\n\t\tfunction isSameNodeType(node, vnode) {\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\treturn typeof vnode === 'string';\n\t\t\t}\n\t\t\tif (isFunctionalComponent(vnode)) return true;\n\t\t\tvar nodeName = vnode.nodeName;\n\t\t\tif (typeof nodeName === 'function') return node._componentConstructor === nodeName;\n\t\t\treturn node.nodeName.toLowerCase() === nodeName;\n\t\t}\n\t\n\t\t/** Check if a VNode is a reference to a stateless functional component.\n\t\t *\tA function component is represented as a VNode whose `nodeName` property is a reference to a function.\n\t\t *\tIf that function is not a Component (ie, has no `.render()` method on a prototype), it is considered a stateless functional component.\n\t\t *\t@param {VNode} vnode\tA VNode\n\t\t *\t@private\n\t\t */\n\t\tfunction isFunctionalComponent(_ref2) {\n\t\t\tvar nodeName = _ref2.nodeName;\n\t\n\t\t\treturn typeof nodeName === 'function' && !nodeName.prototype.render;\n\t\t}\n\t\n\t\t/** Construct a resultant VNode from a VNode referencing a stateless functional component.\n\t\t *\t@param {VNode} vnode\tA VNode with a `nodeName` property that is a reference to a function.\n\t\t *\t@private\n\t\t */\n\t\tfunction buildFunctionalComponent(vnode) {\n\t\t\treturn vnode.nodeName(getNodeProps(vnode)) || EMPTY_BASE;\n\t\t}\n\t\n\t\t/** Mark component as dirty and queue up a render.\n\t\t *\t@param {Component} component\n\t\t *\t@private\n\t\t */\n\t\tfunction triggerComponentRender(component) {\n\t\t\tif (!component._dirty) {\n\t\t\t\tcomponent._dirty = true;\n\t\t\t\trenderQueue.add(component);\n\t\t\t}\n\t\t}\n\t\n\t\t/** Set a component's `props` (generally derived from JSX attributes).\n\t\t*\t@param {Object} props\n\t\t*\t@param {Object} [opts]\n\t\t*\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n\t\t*\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n\t\t */\n\t\tfunction setComponentProps(component, props) {\n\t\t\tvar opts = arguments.length <= 2 || arguments[2] === undefined ? EMPTY : arguments[2];\n\t\n\t\t\tvar d = component._disableRendering;\n\t\t\tcomponent._disableRendering = true;\n\t\t\thook(component, 'componentWillReceiveProps', props, component.props);\n\t\t\tcomponent.nextProps = props;\n\t\t\tcomponent._disableRendering = d;\n\t\t\tif (opts.render !== false) {\n\t\t\t\tif (opts.renderSync || options.syncComponentUpdates) {\n\t\t\t\t\trenderComponent(component);\n\t\t\t\t} else {\n\t\t\t\t\ttriggerComponentRender(component);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n\t\t *\t@param {Component} component\n\t\t *\t@param {Object} [opts]\n\t\t *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n\t\t *\t@private\n\t\t */\n\t\tfunction renderComponent(component, opts) {\n\t\t\tif (component._disableRendering) return;\n\t\n\t\t\tcomponent._dirty = false;\n\t\n\t\t\tvar p = component.nextProps,\n\t\t\t    s = component.state;\n\t\n\t\t\tif (component.base) {\n\t\t\t\tif (hook(component, 'shouldComponentUpdate', p, s) === false) {\n\t\t\t\t\tcomponent.props = p;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\thook(component, 'componentWillUpdate', p, s);\n\t\t\t}\n\t\n\t\t\tcomponent.props = p;\n\t\n\t\t\tvar rendered = hook(component, 'render', p, s),\n\t\t\t    childComponent = rendered && rendered.nodeName,\n\t\t\t    base = undefined;\n\t\n\t\t\tif (typeof childComponent === 'function' && childComponent.prototype.render) {\n\t\t\t\t// set up high order component link\n\t\n\t\t\t\tvar inst = component._component;\n\t\t\t\tif (inst && inst.constructor !== childComponent) {\n\t\t\t\t\tunmountComponent(inst.base, inst, false);\n\t\t\t\t\tinst = null;\n\t\t\t\t}\n\t\n\t\t\t\tvar childProps = getNodeProps(rendered);\n\t\n\t\t\t\tif (inst) {\n\t\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER);\n\t\t\t\t} else {\n\t\t\t\t\tinst = componentRecycler.create(childComponent, childProps);\n\t\t\t\t\tinst._parentComponent = component;\n\t\t\t\t\tcomponent._component = inst;\n\t\t\t\t\tif (component.base) deepHook(inst, 'componentWillMount');\n\t\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER);\n\t\t\t\t\trenderComponent(inst, DOM_RENDER);\n\t\t\t\t\tif (component.base) deepHook(inst, 'componentDidMount');\n\t\t\t\t}\n\t\n\t\t\t\tbase = inst.base;\n\t\t\t} else {\n\t\t\t\t// destroy high order component link\n\t\t\t\tif (component._component) {\n\t\t\t\t\tunmountComponent(component.base, component._component);\n\t\t\t\t}\n\t\t\t\tcomponent._component = null;\n\t\n\t\t\t\tif (component.base || opts && opts.build) {\n\t\t\t\t\tbase = build(component.base, rendered || EMPTY_BASE, component);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (component.base && base !== component.base) {\n\t\t\t\tvar _p2 = component.base.parentNode;\n\t\t\t\tif (_p2) _p2.replaceChild(base, component.base);\n\t\t\t}\n\t\n\t\t\tcomponent.base = base;\n\t\t\tif (base) {\n\t\t\t\tbase._component = component;\n\t\t\t\tbase._componentConstructor = component.constructor;\n\t\t\t}\n\t\n\t\t\thook(component, 'componentDidUpdate', p, s);\n\t\n\t\t\treturn rendered;\n\t\t}\n\t\n\t\t/** Apply the Component referenced by a VNode to the DOM.\n\t\t *\t@param {Element} dom\tThe DOM node to mutate\n\t\t *\t@param {VNode} vnode\tA Component-referencing VNode\n\t\t *\t@returns {Element} dom\tThe created/mutated element\n\t\t *\t@private\n\t\t */\n\t\tfunction buildComponentFromVNode(dom, vnode) {\n\t\t\tvar c = dom && dom._component;\n\t\n\t\t\tif (isFunctionalComponent(vnode)) {\n\t\t\t\tvar p = build(dom, buildFunctionalComponent(vnode));\n\t\t\t\tp._componentConstructor = vnode.nodeName;\n\t\t\t\treturn p;\n\t\t\t}\n\t\n\t\t\tvar isOwner = c && dom._componentConstructor === vnode.nodeName;\n\t\t\twhile (c && !isOwner && (c = c._parentComponent)) {\n\t\t\t\tisOwner = c.constructor === vnode.nodeName;\n\t\t\t}\n\t\n\t\t\tif (isOwner) {\n\t\t\t\tsetComponentProps(c, getNodeProps(vnode), SYNC_RENDER);\n\t\t\t} else {\n\t\t\t\tif (c) {\n\t\t\t\t\tunmountComponent(dom, c);\n\t\t\t\t}\n\t\t\t\tdom = createComponentFromVNode(vnode);\n\t\t\t}\n\t\n\t\t\treturn dom;\n\t\t}\n\t\n\t\t/** Instantiate and render a Component, given a VNode whose nodeName is a constructor.\n\t\t *\t@param {VNode} vnode\n\t\t *\t@private\n\t\t */\n\t\tfunction createComponentFromVNode(vnode) {\n\t\t\tvar props = getNodeProps(vnode);\n\t\t\tvar component = componentRecycler.create(vnode.nodeName, props);\n\t\t\tsetComponentProps(component, props, NO_RENDER);\n\t\t\trenderComponent(component, DOM_RENDER);\n\t\n\t\t\t// let node = component.base;\n\t\t\t//if (!node._component) {\n\t\t\t//\tnode._component = component;\n\t\t\t//\tnode._componentConstructor = vnode.nodeName;\n\t\t\t//}\n\t\n\t\t\treturn component.base;\n\t\t}\n\t\n\t\t/** Remove a component from the DOM and recycle it.\n\t\t *\t@param {Element} dom\t\t\tA DOM node from which to unmount the given Component\n\t\t *\t@param {Component} component\tThe Component instance to unmount\n\t\t *\t@private\n\t\t */\n\t\tfunction unmountComponent(dom, component, remove) {\n\t\t\t// console.warn('unmounting mismatched component', component);\n\t\n\t\t\thook(component, 'componentWillUnmount');\n\t\t\tif (remove !== false) {\n\t\t\t\tif (dom._component === component) {\n\t\t\t\t\tdelete dom._component;\n\t\t\t\t\tdelete dom._componentConstructor;\n\t\t\t\t}\n\t\t\t\tvar base = component.base;\n\t\t\t\tif (base && base.parentNode) {\n\t\t\t\t\tbase.parentNode.removeChild(base);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponent._parentComponent = null;\n\t\t\thook(component, 'componentDidUnmount');\n\t\t\tcomponentRecycler.collect(component);\n\t\t}\n\t\n\t\t/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n\t\t *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n\t\t *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n\t\t *\t@returns {Element} dom\t\t\tThe created/mutated element\n\t\t *\t@private\n\t\t */\n\t\tfunction build(dom, vnode) {\n\t\t\tvar out = dom,\n\t\t\t    nodeName = vnode.nodeName;\n\t\n\t\t\tif (typeof nodeName === 'function' && !nodeName.prototype.render) {\n\t\t\t\tvnode = buildFunctionalComponent(vnode);\n\t\t\t\tnodeName = vnode.nodeName;\n\t\t\t}\n\t\n\t\t\tif (typeof nodeName === 'function') {\n\t\t\t\treturn buildComponentFromVNode(dom, vnode);\n\t\t\t}\n\t\n\t\t\tif (typeof vnode === 'string') {\n\t\t\t\tif (dom) {\n\t\t\t\t\tif (dom.nodeType === 3) {\n\t\t\t\t\t\tdom[TEXT_CONTENT] = vnode;\n\t\t\t\t\t\treturn dom;\n\t\t\t\t\t} else if (dom.nodeType === 1) {\n\t\t\t\t\t\trecycler.collect(dom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn document.createTextNode(vnode);\n\t\t\t}\n\t\n\t\t\tif (nodeName === null || nodeName === undefined) {\n\t\t\t\tnodeName = 'x-undefined-element';\n\t\t\t}\n\t\n\t\t\tif (!dom) {\n\t\t\t\tout = recycler.create(nodeName);\n\t\t\t} else if (dom.nodeName.toLowerCase() !== nodeName) {\n\t\t\t\tout = recycler.create(nodeName);\n\t\t\t\tappendChildren(out, toArray(dom.childNodes));\n\t\t\t\t// reclaim element nodes\n\t\t\t\tif (dom.nodeType === 1) recycler.collect(dom);\n\t\t\t}\n\t\n\t\t\t// apply attributes\n\t\t\tvar old = getNodeAttributes(out) || EMPTY,\n\t\t\t    attrs = vnode.attributes || EMPTY;\n\t\n\t\t\t// removed attributes\n\t\t\tif (old !== EMPTY) {\n\t\t\t\tfor (var _name in old) {\n\t\t\t\t\tif (hop.call(old, _name)) {\n\t\t\t\t\t\tvar o = attrs[_name];\n\t\t\t\t\t\tif (o === undefined || o === null) {\n\t\t\t\t\t\t\tsetAccessor(out, _name, null, old[_name]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// new & updated attributes\n\t\t\tif (attrs !== EMPTY) {\n\t\t\t\tfor (var _name2 in attrs) {\n\t\t\t\t\tif (hop.call(attrs, _name2)) {\n\t\t\t\t\t\tvar value = attrs[_name2];\n\t\t\t\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\t\t\t\tvar prev = getAccessor(out, _name2, old[_name2]);\n\t\t\t\t\t\t\tif (value !== prev) {\n\t\t\t\t\t\t\t\tsetAccessor(out, _name2, value, prev);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar children = toArray(out.childNodes);\n\t\t\tvar keyed = {};\n\t\t\tfor (var i = children.length; i--;) {\n\t\t\t\tvar t = children[i].nodeType;\n\t\t\t\tvar key = undefined;\n\t\t\t\tif (t === 3) {\n\t\t\t\t\tkey = t.key;\n\t\t\t\t} else if (t === 1) {\n\t\t\t\t\tkey = children[i].getAttribute('key');\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (key) keyed[key] = children.splice(i, 1)[0];\n\t\t\t}\n\t\t\tvar newChildren = [];\n\t\n\t\t\tif (vnode.children) {\n\t\t\t\tfor (var i = 0, vlen = vnode.children.length; i < vlen; i++) {\n\t\t\t\t\tvar vchild = vnode.children[i];\n\t\t\t\t\t// if (isFunctionalComponent(vchild)) {\n\t\t\t\t\t// \tvchild = buildFunctionalComponent(vchild);\n\t\t\t\t\t// }\n\t\t\t\t\tvar _attrs = vchild.attributes,\n\t\t\t\t\t    key = undefined,\n\t\t\t\t\t    child = undefined;\n\t\t\t\t\tif (_attrs) {\n\t\t\t\t\t\tkey = _attrs.key;\n\t\t\t\t\t\tchild = key && keyed[key];\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\t\t\tif (!child) {\n\t\t\t\t\t\tvar len = children.length;\n\t\t\t\t\t\tif (children.length) {\n\t\t\t\t\t\t\tfor (var j = 0; j < len; j++) {\n\t\t\t\t\t\t\t\tif (isSameNodeType(children[j], vchild)) {\n\t\t\t\t\t\t\t\t\tchild = children.splice(j, 1)[0];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\t\t\tnewChildren.push(build(child, vchild));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// apply the constructed/enhanced ordered list to the parent\n\t\t\tfor (var i = 0, len = newChildren.length; i < len; i++) {\n\t\t\t\t// we're intentionally re-referencing out.childNodes here as it is a live NodeList\n\t\t\t\tif (out.childNodes[i] !== newChildren[i]) {\n\t\t\t\t\tvar child = newChildren[i],\n\t\t\t\t\t    c = child._component,\n\t\t\t\t\t    next = out.childNodes[i + 1];\n\t\t\t\t\tif (c) deepHook(c, 'componentWillMount');\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tout.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tout.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\tif (c) deepHook(c, 'componentDidMount');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// remove orphaned children\n\t\t\tfor (var i = 0, len = children.length; i < len; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t    c = child._component;\n\t\t\t\tif (c) hook(c, 'componentWillUnmount');\n\t\t\t\tchild.parentNode.removeChild(child);\n\t\t\t\tif (c) {\n\t\t\t\t\thook(c, 'componentDidUnmount');\n\t\t\t\t\tcomponentRecycler.collect(c);\n\t\t\t\t} else if (child.nodeType === 1) {\n\t\t\t\t\trecycler.collect(child);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn out;\n\t\t}\n\t\n\t\t/** Create an Event handler function that sets a given state property.\n\t\t *\t@param {Component} component\tThe component whose state should be updated\n\t\t *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n\t\t *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n\t\t *\t@returns {function} linkedStateHandler\n\t\t *\t@private\n\t\t */\n\t\tfunction createLinkedState(component, key, eventPath) {\n\t\t\tvar path = key.split('.'),\n\t\t\t    p0 = path[0];\n\t\t\treturn function (e) {\n\t\t\t\tvar _component$setState;\n\t\n\t\t\t\tvar t = this,\n\t\t\t\t    obj = component.state,\n\t\t\t\t    v = undefined,\n\t\t\t\t    i = undefined;\n\t\t\t\tif (typeof eventPath === 'string') {\n\t\t\t\t\tv = delve(e, eventPath);\n\t\t\t\t\tif (empty(v) && (t = t._component)) {\n\t\t\t\t\t\tv = delve(t, eventPath);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tv = (t.nodeName + t.type).match(/^input(checkbox|radio)$/i) ? t.checked : t.value;\n\t\t\t\t}\n\t\t\t\tif (typeof v === 'function') v = v.call(t);\n\t\t\t\tfor (i = 0; i < path.length - 1; i++) {\n\t\t\t\t\tobj = obj[path[i]] || {};\n\t\t\t\t}\n\t\t\t\tobj[path[i]] = v;\n\t\t\t\tcomponent.setState((_component$setState = {}, _component$setState[p0] = component.state[p0], _component$setState));\n\t\t\t};\n\t\t}\n\t\n\t\t/** Managed queue of dirty components to be re-rendered.\n\t\t *\t@private\n\t\t */\n\t\tvar renderQueue = {\n\t\t\t// items/itemsOffline swap on each process() call (just a simple pool technique)\n\t\t\titems: [],\n\t\t\titemsOffline: [],\n\t\n\t\t\tadd: function add(component) {\n\t\t\t\tif (renderQueue.items.push(component) !== 1) return;\n\t\n\t\t\t\tvar d = hooks.debounceRendering;\n\t\t\t\tif (d) d(renderQueue.process);else setTimeout(renderQueue.process, 0);\n\t\t\t},\n\t\n\t\t\tprocess: function process() {\n\t\t\t\tvar items = renderQueue.items,\n\t\t\t\t    len = items.length;\n\t\t\t\tif (!len) return;\n\t\t\t\trenderQueue.items = renderQueue.itemsOffline;\n\t\t\t\trenderQueue.items.length = 0;\n\t\t\t\trenderQueue.itemsOffline = items;\n\t\t\t\twhile (len--) {\n\t\t\t\t\tif (items[len]._dirty) {\n\t\t\t\t\t\trenderComponent(items[len]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/** Trigger all queued component renders.\n\t\t *\t@function\n\t\t */\n\t\tvar rerender = renderQueue.process;\n\t\n\t\t/** DOM node pool, keyed on nodeName.\n\t\t *\t@private\n\t\t */\n\t\tvar recycler = {\n\t\t\tnodes: {},\n\t\t\tnormalizeName: memoize(function (name) {\n\t\t\t\treturn name.toUpperCase();\n\t\t\t}),\n\t\n\t\t\tcollect: function collect(node) {\n\t\t\t\trecycler.clean(node);\n\t\t\t\tvar name = recycler.normalizeName(node.nodeName),\n\t\t\t\t    list = recycler.nodes[name];\n\t\t\t\tif (list) list.push(node);else recycler.nodes[name] = [node];\n\t\t\t},\n\t\n\t\t\tcreate: function create(nodeName) {\n\t\t\t\tvar name = recycler.normalizeName(nodeName),\n\t\t\t\t    list = recycler.nodes[name];\n\t\t\t\treturn list && list.pop() || document.createElement(nodeName);\n\t\t\t},\n\t\n\t\t\tclean: function clean(node) {\n\t\t\t\tif (node.parentNode) node.parentNode.removeChild(node);\n\t\n\t\t\t\tif (node.nodeType === 3) return;\n\t\n\t\t\t\tdelete node._component;\n\t\t\t\tdelete node._componentConstructor;\n\t\n\t\t\t\t// remove event listeners & registry\n\t\t\t\tvar l = node._listeners;\n\t\t\t\tdelete node._listeners;\n\t\t\t\tif (l) for (var i in l) {\n\t\t\t\t\tif (hop.call(l, i)) node.removeEventListener(i, eventProxy);\n\t\t\t\t} // strip attributes\n\t\t\t\tvar len = node.attributes && node.attributes.length;\n\t\t\t\tif (len) for (var i = len; i--;) {\n\t\t\t\t\tnode.removeAttribute(node.attributes[i].name);\n\t\t\t\t}\n\t\n\t\t\t\t// if (node.childNodes.length>0) {\n\t\t\t\t// \tconsole.warn(`Warning: Recycler collecting <${node.nodeName}> with ${node.childNodes.length} children.`);\n\t\t\t\t// \ttoArray(node.childNodes).forEach(recycler.collect);\n\t\t\t\t// }\n\t\t\t}\n\t\t};\n\t\n\t\t/** Retains a pool of Components for re-use, keyed on component name.\n\t\t *\t@private\n\t\t */\n\t\tvar componentRecycler = {\n\t\t\tcomponents: {},\n\t\n\t\t\tcollect: function collect(component) {\n\t\t\t\tvar name = component.constructor.name,\n\t\t\t\t    list = componentRecycler.components[name];\n\t\t\t\tif (list) list.push(component);else componentRecycler.components[name] = [component];\n\t\t\t},\n\t\n\t\t\tcreate: function create(ctor, props) {\n\t\t\t\tvar list = componentRecycler.components[ctor.name];\n\t\t\t\tif (list && list.length) {\n\t\t\t\t\tfor (var i = list.length; i--;) {\n\t\t\t\t\t\tif (list[i].constructor === ctor) {\n\t\t\t\t\t\t\treturn list.splice(i, 1)[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn new ctor(props);\n\t\t\t}\n\t\t};\n\t\n\t\t/** Append multiple children to a Node.\n\t\t *\tUses a Document Fragment to batch when appending 2 or more children\n\t\t *\t@private\n\t\t */\n\t\tfunction appendChildren(parent, children) {\n\t\t\tvar len = children.length;\n\t\t\tif (len <= 2) {\n\t\t\t\tparent.appendChild(children[0]);\n\t\t\t\tif (len === 2) parent.appendChild(children[1]);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar frag = document.createDocumentFragment();\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tfrag.appendChild(children[i]);\n\t\t\t}parent.appendChild(frag);\n\t\t}\n\t\n\t\t/** Retrieve the value of a rendered attribute\n\t\t *\t@private\n\t\t */\n\t\tfunction getAccessor(node, name, value) {\n\t\t\tif (name === 'class') return node.className;\n\t\t\tif (name === 'style') return node.style.cssText;\n\t\t\tif (name !== 'type' && name in node) return node[name];\n\t\t\treturn value;\n\t\t}\n\t\n\t\t/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n\t\t *\tIf `value` is `null`, the attribute/handler will be removed.\n\t\t *\t@private\n\t\t */\n\t\tfunction setAccessor(node, name, value, old) {\n\t\t\tif (name === 'class') {\n\t\t\t\tnode.className = value;\n\t\t\t} else if (name === 'style') {\n\t\t\t\tnode.style.cssText = value;\n\t\t\t} else if (name in node && name !== 'type') {\n\t\t\t\tnode[name] = value;\n\t\t\t} else {\n\t\t\t\tsetComplexAccessor(node, name, value, old);\n\t\t\t}\n\t\t}\n\t\n\t\t/** For props without explicit behavior, apply to a Node as event handlers or attributes.\n\t\t *\t@private\n\t\t */\n\t\tfunction setComplexAccessor(node, name, value, old) {\n\t\t\tif (name.substring(0, 2) === 'on') {\n\t\t\t\tvar _type = normalizeEventName(name),\n\t\t\t\t    l = node._listeners || (node._listeners = {});\n\t\t\t\tif (!l[_type]) node.addEventListener(_type, eventProxy);\n\t\t\t\tl[_type] = value;\n\t\t\t\t// @TODO automatically remove proxy event listener when no handlers are left\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar type = typeof value;\n\t\t\tif (value === null) {\n\t\t\t\tnode.removeAttribute(name);\n\t\t\t} else if (type !== 'function' && type !== 'object') {\n\t\t\t\tnode.setAttribute(name, value);\n\t\t\t}\n\t\t}\n\t\n\t\t/** Proxy an event to hooked event handlers\n\t\t *\t@private\n\t\t */\n\t\tfunction eventProxy(e) {\n\t\t\tvar fn = this._listeners[normalizeEventName(e.type)];\n\t\t\tif (fn) return fn.call(this, hook(hooks, 'event', e) || e);\n\t\t}\n\t\n\t\t/** Convert an Event name/type to lowercase and strip any \"on*\" prefix.\n\t\t *\t@function\n\t\t *\t@private\n\t\t */\n\t\tvar normalizeEventName = memoize(function (t) {\n\t\t\treturn t.replace(/^on/i, '').toLowerCase();\n\t\t});\n\t\n\t\t/** Get a node's attributes as a hashmap, regardless of type.\n\t\t *\t@private\n\t\t */\n\t\tfunction getNodeAttributes(node) {\n\t\t\tvar list = node.attributes;\n\t\t\tif (!list || !list.getNamedItem) return list;\n\t\t\tif (list.length) return getAttributesAsObject(list);\n\t\t}\n\t\n\t\t/** Convert a DOM `.attributes` NamedNodeMap to a hashmap.\n\t\t *\t@private\n\t\t */\n\t\tfunction getAttributesAsObject(list) {\n\t\t\tvar attrs = {};\n\t\t\tfor (var i = list.length; i--;) {\n\t\t\t\tvar item = list[i];\n\t\t\t\tattrs[item.name] = item.value;\n\t\t\t}\n\t\t\treturn attrs;\n\t\t}\n\t\n\t\t/** Reconstruct Component-style `props` from a VNode\n\t\t *\t@private\n\t\t */\n\t\tfunction getNodeProps(vnode) {\n\t\t\tvar props = extend({}, vnode.attributes);\n\t\t\tif (vnode.children) {\n\t\t\t\tprops.children = vnode.children;\n\t\t\t}\n\t\t\treturn props;\n\t\t}\n\t\n\t\t/** Convert a hashmap of styles to CSSText\n\t\t *\t@private\n\t\t */\n\t\tfunction styleObjToCss(s) {\n\t\t\tvar str = '',\n\t\t\t    sep = ': ',\n\t\t\t    term = '; ';\n\t\t\tfor (var prop in s) {\n\t\t\t\tif (hop.call(s, prop)) {\n\t\t\t\t\tvar val = s[prop];\n\t\t\t\t\tstr += jsToCss(prop);\n\t\t\t\t\tstr += sep;\n\t\t\t\t\tstr += val;\n\t\t\t\t\tif (typeof val === 'number' && !hop.call(NON_DIMENSION_PROPS, prop)) {\n\t\t\t\t\t\tstr += 'px';\n\t\t\t\t\t}\n\t\t\t\t\tstr += term;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\n\t\t/** Convert a hashmap of CSS classes to a space-delimited className string\n\t\t *\t@private\n\t\t */\n\t\tfunction hashToClassName(c) {\n\t\t\tvar str = '';\n\t\t\tfor (var prop in c) {\n\t\t\t\tif (c[prop]) {\n\t\t\t\t\tif (str) str += ' ';\n\t\t\t\t\tstr += prop;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\n\t\t/** Convert a JavaScript camel-case CSS property name to a CSS property name\n\t\t *\t@private\n\t\t *\t@function\n\t\t */\n\t\tvar jsToCss = memoize(function (s) {\n\t\t\treturn s.replace(/([A-Z])/, '-$1').toLowerCase();\n\t\t});\n\t\n\t\t/** Copy own-properties from `props` onto `obj`.\n\t\t *\t@returns obj\n\t\t *\t@private\n\t\t */\n\t\tfunction extend(obj, props) {\n\t\t\tfor (var i in props) {\n\t\t\t\tif (hop.call(props, i)) {\n\t\t\t\t\tobj[i] = props[i];\n\t\t\t\t}\n\t\t\t}return obj;\n\t\t}\n\t\n\t\tvar preact = { options: options, hooks: hooks, render: render, rerender: rerender, h: h, Component: Component };\n\t\n\t\texports.render = render;\n\t\texports.h = h;\n\t\texports.Component = Component;\n\t\texports.VNode = VNode;\n\t\texports.options = options;\n\t\texports.hooks = hooks;\n\t\texports.rerender = rerender;\n\t\texports['default'] = preact;\n\n\t}));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a26e711c5bb8e4cae26b\n **/","import { h, render } from 'preact';\nimport './style';\n\nrender(<App />, document.body);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","const HAS_DOM = typeof document!=='undefined';\nconst EMPTY = {};\nconst NO_RENDER = { render: false };\nconst SYNC_RENDER = { renderSync: true };\nconst DOM_RENDER = { build: true };\nconst EMPTY_BASE = '';\nconst TEXT_CONTENT = !HAS_DOM || 'textContent' in document ? 'textContent' : 'nodeValue';\nconst NON_DIMENSION_PROPS = {\n\tboxFlex:1,boxFlexGroup:1,columnCount:1,fillOpacity:1,flex:1,flexGrow:1,\n\tflexPositive:1,flexShrink:1,flexNegative:1,fontWeight:1,lineClamp:1,lineHeight:1,\n\topacity:1,order:1,orphans:1,strokeOpacity:1,widows:1,zIndex:1,zoom:1\n};\n\nlet toArray = obj => {\n\tlet arr = [];\n\tfor (let i=obj.length; i--; ) arr[i] = obj[i];\n\treturn arr;\n};\n\nlet hop = Object.prototype.hasOwnProperty;\n\n/** Create a caching wrapper for the given function.\n *\t@private\n */\nlet memoize = (fn, mem={}) => k => hop.call(mem, k) ? mem[k] : (mem[k] = fn(k));\n\n/** Get a deep property value from the given object, expressed in dot-notation.\n *\t@private\n */\nlet delve = (obj, key) => (key.split('.').map( p => (obj = obj && obj[p]) ), obj);\n\n\n\n/** Global options\n *\t@public\n *\t@namespace {Object}\n */\nlet options = {\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t *\t@boolean\n\t */\n\tsyncComponentUpdates: true\n};\n\n\n\n/** Global hook methods\n *\t@public\n *\t@namespace {Object}\n */\nlet hooks = {\n\n\t/** Processes all created VNodes.\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t *\t@protected\n\t */\n\tvnode({ attributes }) {\n\t\tif (!attributes) return;\n\n\t\tlet s = attributes.style;\n\t\tif (s && !s.substring) {\n\t\t\tattributes.style = styleObjToCss(s);\n\t\t}\n\n\t\tlet c = attributes['class'];\n\t\tif (hop.call(attributes, 'className')) {\n\t\t\tc = attributes['class'] = attributes.className;\n\t\t\tdelete attributes.className;\n\t\t}\n\t\tif (c && !c.substring) {\n\t\t\tattributes['class'] = hashToClassName(c);\n\t\t}\n\t}\n\n};\n\n\n\n/** Base Component class, for he ES6 Class method of creating Components\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport class Component {\n\tconstructor() {\n\t\t/** @private */\n\t\tthis._dirty = this._disableRendering = false;\n\t\t/** @private */\n\t\tthis._linkedStates = {};\n\t\t/** @public */\n\t\tthis.nextProps = this.base = null;\n\t\t/** @type {object} */\n\t\tthis.props = hook(this, 'getDefaultProps') || {};\n\t\t/** @type {object} */\n\t\tthis.state = hook(this, 'getInitialState') || {};\n\t\t// @TODO remove me?\n\t\thook(this, 'initialize');\n\t}\n\n\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\n\t *\t@param {object} props\n\t *\t@param {object} state\n\t */\n\tshouldComponentUpdate(props, state) {\n\t\treturn true;\n\t}\n\n\t/** Returns a function that sets a state property when called.\n\t *\tCalling linkState() repeatedly with the same arguments returns a cached link function.\n\t *\n\t *\tProvides some built-in special cases:\n\t *\t\t- Checkboxes and radio buttons link their boolean `checked` value\n\t *\t\t- Inputs automatically link their `value` property\n\t *\t\t- Event paths fall back to any associated Component if not found on an element\n\t *\t\t- If linked value is a function, will invoke it and use the result\n\t *\n\t *\t@param {string} key\t\t\t\tThe path to set - can be a dot-notated deep key\n\t *\t@param {string} [eventPath]\t\tIf set, attempts to find the new state value at a given dot-notated path within the object passed to the linkedState setter.\n\t *\t@returns {function} linkStateSetter(e)\n\t *\n\t *\t@example Update a \"text\" state value when an input changes:\n\t *\t\t<input onChange={ this.linkState('text') } />\n\t *\n\t *\t@example Set a deep state value on click\n\t *\t\t<button onClick={ this.linkState('touch.coords', 'touches.0') }>Tap</button\n\t */\n\tlinkState(key, eventPath) {\n\t\tlet c = this._linkedStates,\n\t\t\tcacheKey = key + '|' + (eventPath || '');\n\t\treturn c[cacheKey] || (c[cacheKey] = createLinkedState(this, key, eventPath));\n\t}\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n\t *\t@param {object} state\t\tA hash of state properties to update with new values\n\t */\n\tsetState(state) {\n\t\textend(this.state, state);\n\t\ttriggerComponentRender(this);\n\t}\n\n\t/** @private */\n\tsetProps(props, opts) {\n\t\treturn setComponentProps(this, props, opts);\n\t}\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t *\t@param {object} state\t\tThe component's current state\n\t *\t@returns VNode\n\t */\n\trender(props) {\n\t\treturn h('div', null, props.children);\n\t}\n}\n\n\n\n/** Virtual DOM Node */\nexport class VNode {\n\tconstructor(nodeName, attributes, children) {\n\t\t/** @type {string|function} */\n\t\tthis.nodeName = nodeName;\n\n\t\t/** @type {object<string>|undefined} */\n\t\tthis.attributes = attributes;\n\n\t\t/** @type {array<VNode>|undefined} */\n\t\tthis.children = children;\n\t}\n}\nVNode.prototype.__isVNode = true;\n\n\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge=null) {\n\tlet existing = merge && merge._component && merge._componentConstructor===vnode.nodeName,\n\t\tbuilt = build(merge, vnode),\n\t\tc = !existing && built._component;\n\tif (c) deepHook(c, 'componentWillMount');\n\tif (build.parentNode!==parent) {\n\t\tparent.appendChild(built);\n\t}\n\tif (c) deepHook(c, 'componentDidMount');\n\treturn built;\n}\n\n\n\n/** @public JSX/hyperscript reviver\n *\t@see http://jasonformat.com/wtf-is-jsx\n *  @example\n *  /** @jsx h *\\/\n *  import { render, h } from 'preact';\n *  render(<span>foo</span>, document.body);\n */\nexport function h(nodeName, attributes, ...args) {\n\tlet children,\n\t\tsharedArr = [],\n\t\tlen = args.length,\n\t\tarr, lastSimple;\n\tif (len) {\n\t\tchildren = [];\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet p = args[i];\n\t\t\tif (empty(p)) continue;\n\t\t\tif (p.join) {\n\t\t\t\tarr = p;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tarr = sharedArr;\n\t\t\t\tarr[0] = p;\n\t\t\t}\n\t\t\tfor (let j=0; j<arr.length; j++) {\n\t\t\t\tlet child = arr[j],\n\t\t\t\t\tsimple = !empty(child) && !isVNode(child);\n\t\t\t\tif (simple) child = String(child);\n\t\t\t\tif (simple && lastSimple) {\n\t\t\t\t\tchildren[children.length-1] += child;\n\t\t\t\t}\n\t\t\t\telse if (!empty(child)) {\n\t\t\t\t\tchildren.push(child);\n\t\t\t\t}\n\t\t\t\tlastSimple = simple;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (attributes && attributes.children) {\n\t\tdelete attributes.children;\n\t}\n\n\tlet p = new VNode(nodeName, attributes || undefined, children || undefined);\n\thook(hooks, 'vnode', p);\n\treturn p;\n}\n\n\n\n/** Invoke a \"hook\" method with arguments if it exists.\n *\t@private\n */\nfunction hook(obj, name, ...args) {\n\tlet fn = obj[name];\n\tif (fn && typeof fn==='function') return fn.apply(obj, args);\n}\n\n\n\n/** Invoke hook() on a component and child components (recursively)\n *\t@private\n */\nfunction deepHook(obj, ...args) {\n\tdo {\n\t\thook(obj, ...args);\n\t} while ((obj=obj._component));\n}\n\n\n\n/** Fast check if an object is a VNode.\n *\t@private\n */\nfunction isVNode(obj) {\n\treturn obj && obj.__isVNode===true;\n}\n\n\n\n/** Check if a value is `null` or `undefined`.\n *\t@private\n */\nfunction empty(x) {\n\treturn x===null || x===undefined;\n}\n\n\n\n/** Check if two nodes are equivalent.\n *\t@param {Element} node\n *\t@param {VNode} vnode\n *\t@private\n */\nfunction isSameNodeType(node, vnode) {\n\tif (node.nodeType===3) {\n\t\treturn typeof vnode==='string';\n\t}\n\tif (isFunctionalComponent(vnode)) return true;\n\tlet nodeName = vnode.nodeName;\n\tif (typeof nodeName==='function') return node._componentConstructor===nodeName;\n\treturn node.nodeName.toLowerCase()===nodeName;\n}\n\n\n\n/** Check if a VNode is a reference to a stateless functional component.\n *\tA function component is represented as a VNode whose `nodeName` property is a reference to a function.\n *\tIf that function is not a Component (ie, has no `.render()` method on a prototype), it is considered a stateless functional component.\n *\t@param {VNode} vnode\tA VNode\n *\t@private\n */\nfunction isFunctionalComponent({ nodeName }) {\n\treturn typeof nodeName==='function' && !nodeName.prototype.render;\n}\n\n\n\n/** Construct a resultant VNode from a VNode referencing a stateless functional component.\n *\t@param {VNode} vnode\tA VNode with a `nodeName` property that is a reference to a function.\n *\t@private\n */\nfunction buildFunctionalComponent(vnode) {\n\treturn vnode.nodeName(getNodeProps(vnode)) || EMPTY_BASE;\n}\n\n\n\n/** Mark component as dirty and queue up a render.\n *\t@param {Component} component\n *\t@private\n */\nfunction triggerComponentRender(component) {\n\tif (!component._dirty) {\n\t\tcomponent._dirty = true;\n\t\trenderQueue.add(component);\n\t}\n}\n\n\n\n/** Set a component's `props` (generally derived from JSX attributes).\n*\t@param {Object} props\n*\t@param {Object} [opts]\n*\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n*\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nfunction setComponentProps(component, props, opts=EMPTY) {\n\tlet d = component._disableRendering;\n\tcomponent._disableRendering = true;\n\thook(component, 'componentWillReceiveProps', props, component.props);\n\tcomponent.nextProps = props;\n\tcomponent._disableRendering = d;\n\tif (opts.render!==false) {\n\t\tif (opts.renderSync || options.syncComponentUpdates) {\n\t\t\trenderComponent(component);\n\t\t}\n\t\telse {\n\t\t\ttriggerComponentRender(component);\n\t\t}\n\t}\n}\n\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nfunction renderComponent(component, opts) {\n\tif (component._disableRendering) return;\n\n\tcomponent._dirty = false;\n\n\tlet p = component.nextProps,\n\t\ts = component.state;\n\n\tif (component.base) {\n\t\tif (hook(component, 'shouldComponentUpdate', p, s)===false) {\n\t\t\tcomponent.props = p;\n\t\t\treturn;\n\t\t}\n\n\t\thook(component, 'componentWillUpdate', p, s);\n\t}\n\n\tcomponent.props = p;\n\n\tlet rendered = hook(component, 'render', p, s),\n\t\tchildComponent = rendered && rendered.nodeName,\n\t\tbase;\n\n\tif (typeof childComponent==='function' && childComponent.prototype.render) {\n\t\t// set up high order component link\n\n\t\tlet inst = component._component;\n\t\tif (inst && inst.constructor!==childComponent) {\n\t\t\tunmountComponent(inst.base, inst, false);\n\t\t\tinst = null;\n\t\t}\n\n\t\tlet childProps = getNodeProps(rendered);\n\n\t\tif (inst) {\n\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER);\n\t\t}\n\t\telse {\n\t\t\tinst = componentRecycler.create(childComponent, childProps);\n\t\t\tinst._parentComponent = component;\n\t\t\tcomponent._component = inst;\n\t\t\tif (component.base) deepHook(inst, 'componentWillMount');\n\t\t\tsetComponentProps(inst, childProps, NO_RENDER);\n\t\t\trenderComponent(inst, DOM_RENDER);\n\t\t\tif (component.base) deepHook(inst, 'componentDidMount');\n\t\t}\n\n\t\tbase = inst.base;\n\t}\n\telse {\n\t\t// destroy high order component link\n\t\tif (component._component) {\n\t\t\tunmountComponent(component.base, component._component);\n\t\t}\n\t\tcomponent._component = null;\n\n\t\tif (component.base || (opts && opts.build)) {\n\t\t\tbase = build(component.base, rendered || EMPTY_BASE, component);\n\t\t}\n\t}\n\n\tif (component.base && base!==component.base) {\n\t\tlet p = component.base.parentNode;\n\t\tif (p) p.replaceChild(base, component.base);\n\t}\n\n\tcomponent.base = base;\n\tif (base) {\n\t\tbase._component = component;\n\t\tbase._componentConstructor = component.constructor;\n\t}\n\n\thook(component, 'componentDidUpdate', p, s);\n\n\treturn rendered;\n}\n\n\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nfunction buildComponentFromVNode(dom, vnode) {\n\tlet c = dom && dom._component;\n\n\tif (isFunctionalComponent(vnode)) {\n\t\tlet p = build(dom, buildFunctionalComponent(vnode));\n\t\tp._componentConstructor = vnode.nodeName;\n\t\treturn p;\n\t}\n\n\tlet isOwner = c && dom._componentConstructor===vnode.nodeName;\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (isOwner) {\n\t\tsetComponentProps(c, getNodeProps(vnode), SYNC_RENDER);\n\t}\n\telse {\n\t\tif (c) {\n\t\t\tunmountComponent(dom, c);\n\t\t}\n\t\tdom = createComponentFromVNode(vnode);\n\t}\n\n\treturn dom;\n}\n\n\n\n/** Instantiate and render a Component, given a VNode whose nodeName is a constructor.\n *\t@param {VNode} vnode\n *\t@private\n */\nfunction createComponentFromVNode(vnode) {\n\tlet props = getNodeProps(vnode);\n\tlet component = componentRecycler.create(vnode.nodeName, props);\n\tsetComponentProps(component, props, NO_RENDER);\n\trenderComponent(component, DOM_RENDER);\n\n\t// let node = component.base;\n\t//if (!node._component) {\n\t//\tnode._component = component;\n\t//\tnode._componentConstructor = vnode.nodeName;\n\t//}\n\n\treturn component.base;\n}\n\n\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Element} dom\t\t\tA DOM node from which to unmount the given Component\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nfunction unmountComponent(dom, component, remove) {\n\t// console.warn('unmounting mismatched component', component);\n\n\thook(component, 'componentWillUnmount');\n\tif (remove!==false) {\n\t\tif (dom._component===component) {\n\t\t\tdelete dom._component;\n\t\t\tdelete dom._componentConstructor;\n\t\t}\n\t\tlet base = component.base;\n\t\tif (base && base.parentNode) {\n\t\t\tbase.parentNode.removeChild(base);\n\t\t}\n\t}\n\tcomponent._parentComponent = null;\n\thook(component, 'componentDidUnmount');\n\tcomponentRecycler.collect(component);\n}\n\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nfunction build(dom, vnode) {\n\tlet out = dom,\n\t\tnodeName = vnode.nodeName;\n\n\tif (typeof nodeName==='function' && !nodeName.prototype.render) {\n\t\tvnode = buildFunctionalComponent(vnode);\n\t\tnodeName = vnode.nodeName;\n\t}\n\n\tif (typeof nodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode);\n\t}\n\n\tif (typeof vnode==='string') {\n\t\tif (dom) {\n\t\t\tif (dom.nodeType===3) {\n\t\t\t\tdom[TEXT_CONTENT] = vnode;\n\t\t\t\treturn dom;\n\t\t\t}\n\t\t\telse if (dom.nodeType===1) {\n\t\t\t\trecycler.collect(dom);\n\t\t\t}\n\t\t}\n\t\treturn document.createTextNode(vnode);\n\t}\n\n\tif (nodeName===null || nodeName===undefined) {\n\t\tnodeName = 'x-undefined-element';\n\t}\n\n\tif (!dom) {\n\t\tout = recycler.create(nodeName);\n\t}\n\telse if (dom.nodeName.toLowerCase()!==nodeName) {\n\t\tout = recycler.create(nodeName);\n\t\tappendChildren(out, toArray(dom.childNodes));\n\t\t// reclaim element nodes\n\t\tif (dom.nodeType===1) recycler.collect(dom);\n\t}\n\n\t// apply attributes\n\tlet old = getNodeAttributes(out) || EMPTY,\n\t\tattrs = vnode.attributes || EMPTY;\n\n\t// removed attributes\n\tif (old!==EMPTY) {\n\t\tfor (let name in old) {\n\t\t\tif (hop.call(old, name)) {\n\t\t\t\tlet o = attrs[name];\n\t\t\t\tif (o===undefined || o===null) {\n\t\t\t\t\tsetAccessor(out, name, null, old[name]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// new & updated attributes\n\tif (attrs!==EMPTY) {\n\t\tfor (let name in attrs) {\n\t\t\tif (hop.call(attrs, name)) {\n\t\t\t\tlet value = attrs[name];\n\t\t\t\tif (value!==undefined && value!==null) {\n\t\t\t\t\tlet prev = getAccessor(out, name, old[name]);\n\t\t\t\t\tif (value!==prev) {\n\t\t\t\t\t\tsetAccessor(out, name, value, prev);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tlet children = toArray(out.childNodes);\n\tlet keyed = {};\n\tfor (let i=children.length; i--; ) {\n\t\tlet t = children[i].nodeType;\n\t\tlet key;\n\t\tif (t===3) {\n\t\t\tkey = t.key;\n\t\t}\n\t\telse if (t===1) {\n\t\t\tkey = children[i].getAttribute('key');\n\t\t}\n\t\telse {\n\t\t\tcontinue;\n\t\t}\n\t\tif (key) keyed[key] = children.splice(i, 1)[0];\n\t}\n\tlet newChildren = [];\n\n\tif (vnode.children) {\n\t\tfor (let i=0, vlen=vnode.children.length; i<vlen; i++) {\n\t\t\tlet vchild = vnode.children[i];\n\t\t\t// if (isFunctionalComponent(vchild)) {\n\t\t\t// \tvchild = buildFunctionalComponent(vchild);\n\t\t\t// }\n\t\t\tlet attrs = vchild.attributes,\n\t\t\t\tkey, child;\n\t\t\tif (attrs) {\n\t\t\t\tkey = attrs.key;\n\t\t\t\tchild = key && keyed[key];\n\t\t\t}\n\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\tif (!child) {\n\t\t\t\tlet len = children.length;\n\t\t\t\tif (children.length) {\n\t\t\t\t\tfor (let j=0; j<len; j++) {\n\t\t\t\t\t\tif (isSameNodeType(children[j], vchild)) {\n\t\t\t\t\t\t\tchild = children.splice(j, 1)[0];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tnewChildren.push(build(child, vchild));\n\t\t}\n\t}\n\n\t// apply the constructed/enhanced ordered list to the parent\n\tfor (let i=0, len=newChildren.length; i<len; i++) {\n\t\t// we're intentionally re-referencing out.childNodes here as it is a live NodeList\n\t\tif (out.childNodes[i]!==newChildren[i]) {\n\t\t\tlet child = newChildren[i],\n\t\t\t\tc = child._component,\n\t\t\t\tnext = out.childNodes[i+1];\n\t\t\tif (c) deepHook(c, 'componentWillMount');\n\t\t\tif (next) {\n\t\t\t\tout.insertBefore(child, next);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout.appendChild(child);\n\t\t\t}\n\t\t\tif (c) deepHook(c, 'componentDidMount');\n\t\t}\n\t}\n\n\t// remove orphaned children\n\tfor (let i=0, len=children.length; i<len; i++) {\n\t\tlet child = children[i],\n\t\t\tc = child._component;\n\t\tif (c) hook(c, 'componentWillUnmount');\n\t\tchild.parentNode.removeChild(child);\n\t\tif (c) {\n\t\t\thook(c, 'componentDidUnmount');\n\t\t\tcomponentRecycler.collect(c);\n\t\t}\n\t\telse if (child.nodeType===1) {\n\t\t\trecycler.collect(child);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n *\t@private\n */\nfunction createLinkedState(component, key, eventPath) {\n\tlet path = key.split('.'),\n\t\tp0 = path[0];\n\treturn function(e) {\n\t\tlet t = this,\n\t\t\tobj = component.state,\n\t\t\tv, i;\n\t\tif (typeof eventPath==='string') {\n\t\t\tv = delve(e, eventPath);\n\t\t\tif (empty(v) && (t=t._component)) {\n\t\t\t\tv = delve(t, eventPath);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tv = (t.nodeName+t.type).match(/^input(checkbox|radio)$/i) ? t.checked : t.value;\n\t\t}\n\t\tif (typeof v==='function') v = v.call(t);\n\t\tfor (i=0; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || {};\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState({ [p0]: component.state[p0] });\n\t};\n}\n\n\n\n/** Managed queue of dirty components to be re-rendered.\n *\t@private\n */\nlet renderQueue = {\n\t// items/itemsOffline swap on each process() call (just a simple pool technique)\n\titems: [],\n\titemsOffline: [],\n\n\tadd(component) {\n\t\tif (renderQueue.items.push(component)!==1) return;\n\n\t\tlet d = hooks.debounceRendering;\n\t\tif (d) d(renderQueue.process);\n\t\telse setTimeout(renderQueue.process, 0);\n\t},\n\n\tprocess() {\n\t\tlet items = renderQueue.items,\n\t\t\tlen = items.length;\n\t\tif (!len) return;\n\t\trenderQueue.items = renderQueue.itemsOffline;\n\t\trenderQueue.items.length = 0;\n\t\trenderQueue.itemsOffline = items;\n\t\twhile (len--) {\n\t\t\tif (items[len]._dirty) {\n\t\t\t\trenderComponent(items[len]);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n/** Trigger all queued component renders.\n *\t@function\n */\nlet rerender = renderQueue.process;\n\n\n\n/** DOM node pool, keyed on nodeName.\n *\t@private\n */\nlet recycler = {\n\tnodes: {},\n\tnormalizeName: memoize(name => name.toUpperCase()),\n\n\tcollect(node) {\n\t\trecycler.clean(node);\n\t\tlet name = recycler.normalizeName(node.nodeName),\n\t\t\tlist = recycler.nodes[name];\n\t\tif (list) list.push(node);\n\t\telse recycler.nodes[name] = [node];\n\t},\n\n\tcreate(nodeName) {\n\t\tlet name = recycler.normalizeName(nodeName),\n\t\t\tlist = recycler.nodes[name];\n\t\treturn list && list.pop() || document.createElement(nodeName);\n\t},\n\n\tclean(node) {\n\t\tif (node.parentNode) node.parentNode.removeChild(node);\n\n\t\tif (node.nodeType===3) return;\n\n\t\tdelete node._component;\n\t\tdelete node._componentConstructor;\n\n\t\t// remove event listeners & registry\n\t\tlet l = node._listeners;\n\t\tdelete node._listeners;\n\t\tif (l) for (let i in l) if (hop.call(l, i)) node.removeEventListener(i, eventProxy);\n\n\t\t// strip attributes\n\t\tlet len = node.attributes && node.attributes.length;\n\t\tif (len) for (let i=len; i--; ) {\n\t\t\tnode.removeAttribute(node.attributes[i].name);\n\t\t}\n\n\t\t// if (node.childNodes.length>0) {\n\t\t// \tconsole.warn(`Warning: Recycler collecting <${node.nodeName}> with ${node.childNodes.length} children.`);\n\t\t// \ttoArray(node.childNodes).forEach(recycler.collect);\n\t\t// }\n\t}\n};\n\n\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\t@private\n */\nlet componentRecycler = {\n\tcomponents: {},\n\n\tcollect(component) {\n\t\tlet name = component.constructor.name,\n\t\t\tlist = componentRecycler.components[name];\n\t\tif (list) list.push(component);\n\t\telse componentRecycler.components[name] = [component];\n\t},\n\n\tcreate(ctor, props) {\n\t\tlet list = componentRecycler.components[ctor.name];\n\t\tif (list && list.length) {\n\t\t\tfor (let i=list.length; i--; ) {\n\t\t\t\tif (list[i].constructor===ctor) {\n\t\t\t\t\treturn list.splice(i, 1)[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ctor(props);\n\t}\n};\n\n\n\n/** Append multiple children to a Node.\n *\tUses a Document Fragment to batch when appending 2 or more children\n *\t@private\n */\nfunction appendChildren(parent, children) {\n\tlet len = children.length;\n\tif (len<=2) {\n\t\tparent.appendChild(children[0]);\n\t\tif (len===2) parent.appendChild(children[1]);\n\t\treturn;\n\t}\n\n\tlet frag = document.createDocumentFragment();\n\tfor (let i=0; i<len; i++) frag.appendChild(children[i]);\n\tparent.appendChild(frag);\n}\n\n\n\n/** Retrieve the value of a rendered attribute\n *\t@private\n */\nfunction getAccessor(node, name, value) {\n\tif (name==='class') return node.className;\n\tif (name==='style') return node.style.cssText;\n\tif (name!=='type' && name in node) return node[name];\n\treturn value;\n}\n\n\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@private\n */\nfunction setAccessor(node, name, value, old) {\n\tif (name==='class') {\n\t\tnode.className = value;\n\t}\n\telse if (name==='style') {\n\t\tnode.style.cssText = value;\n\t}\n\telse if (name in node && name!=='type') {\n\t\tnode[name] = value;\n\t}\n\telse {\n\t\tsetComplexAccessor(node, name, value, old);\n\t}\n}\n\n\n/** For props without explicit behavior, apply to a Node as event handlers or attributes.\n *\t@private\n */\nfunction setComplexAccessor(node, name, value, old) {\n\tif (name.substring(0,2)==='on') {\n\t\tlet type = normalizeEventName(name),\n\t\t\tl = node._listeners || (node._listeners = {});\n\t\tif (!l[type]) node.addEventListener(type, eventProxy);\n\t\tl[type] = value;\n\t\t// @TODO automatically remove proxy event listener when no handlers are left\n\t\treturn;\n\t}\n\n\tlet type = typeof value;\n\tif (value===null) {\n\t\tnode.removeAttribute(name);\n\t}\n\telse if (type!=='function' && type!=='object') {\n\t\tnode.setAttribute(name, value);\n\t}\n}\n\n\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\tlet fn = this._listeners[normalizeEventName(e.type)];\n\tif (fn) return fn.call(this, hook(hooks, 'event', e) || e);\n}\n\n\n\n/** Convert an Event name/type to lowercase and strip any \"on*\" prefix.\n *\t@function\n *\t@private\n */\nlet normalizeEventName = memoize(t => t.replace(/^on/i,'').toLowerCase());\n\n\n\n/** Get a node's attributes as a hashmap, regardless of type.\n *\t@private\n */\nfunction getNodeAttributes(node) {\n\tlet list = node.attributes;\n\tif (!list || !list.getNamedItem) return list;\n\tif (list.length) return getAttributesAsObject(list);\n}\n\n\n\n/** Convert a DOM `.attributes` NamedNodeMap to a hashmap.\n *\t@private\n */\nfunction getAttributesAsObject(list) {\n\tlet attrs = {};\n\tfor (let i=list.length; i--; ) {\n\t\tlet item = list[i];\n\t\tattrs[item.name] = item.value;\n\t}\n\treturn attrs;\n}\n\n\n\n/** Reconstruct Component-style `props` from a VNode\n *\t@private\n */\nfunction getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tif (vnode.children) {\n\t\tprops.children = vnode.children;\n\t}\n\treturn props;\n}\n\n\n\n/** Convert a hashmap of styles to CSSText\n *\t@private\n */\nfunction styleObjToCss(s) {\n\tlet str = '',\n\t\tsep = ': ',\n\t\tterm = '; ';\n\tfor (let prop in s) {\n\t\tif (hop.call(s, prop)) {\n\t\t\tlet val = s[prop];\n\t\t\tstr += jsToCss(prop);\n\t\t\tstr += sep;\n\t\t\tstr += val;\n\t\t\tif (typeof val==='number' && !hop.call(NON_DIMENSION_PROPS, prop)) {\n\t\t\t\tstr += 'px';\n\t\t\t}\n\t\t\tstr += term;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n\n/** Convert a hashmap of CSS classes to a space-delimited className string\n *\t@private\n */\nfunction hashToClassName(c) {\n\tlet str = '';\n\tfor (let prop in c) {\n\t\tif (c[prop]) {\n\t\t\tif (str) str += ' ';\n\t\t\tstr += prop;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n\n/** Convert a JavaScript camel-case CSS property name to a CSS property name\n *\t@private\n *\t@function\n */\nlet jsToCss = memoize( s => s.replace(/([A-Z])/,'-$1').toLowerCase() );\n\n\n\n/** Copy own-properties from `props` onto `obj`.\n *\t@returns obj\n *\t@private\n */\nfunction extend(obj, props) {\n\tfor (let i in props) if (hop.call(props, i)) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\nexport { options, hooks, rerender };\nexport default { options, hooks, render, rerender, h, Component };\n\n\n\n/** WEBPACK FOOTER **\n ** ../src/preact.js\n **/"],"sourceRoot":""}